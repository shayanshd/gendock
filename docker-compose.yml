version: '3.8'

services:
    web:
        restart: unless-stopped
        build: ./gendock_project
        command: python manage.py runserver 0.0.0.0:8000
        volumes:
            - ./gendock_project/rest/:/gendock/rest
            - ./gendock_project/cleaned_smiles/:/gendock/cleaned_smiles
            - ./gendock_project/uploads/:/gendock/uploads
            - ./gendock_project/uploads/:/gendock/receptor_files
        ports:
            - 8085:8000
        environment:
            DJANGO_ALLOWED_HOSTS: "localhost 127.0.0.1 [::1]"
            DEBUG: "True"
            CELERY_BROKER_URL: "redis://redis:6379/0"
            CELERY_RESULT_BACKEND: "redis://redis:6379/0"
            DJANGO_DB: postgresql
            POSTGRES_HOST: db
            POSTGRES_NAME: postgres
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
            POSTGRES_PORT: 5432
        depends_on:
        - redis
    redis:
        restart: unless-stopped
        image: redis:alpine
    celery:
        restart: unless-stopped
        build: ./gendock_project
        command: celery -A gendock_project worker -l INFO -P threads
        deploy:
            resources:
                reservations:
                    devices:
                      - driver: nvidia
                        count: 1
                        capabilities: [gpu]
        volumes:
            - ./gendock_project/rest/:/gendock/rest
            - ./gendock_project/cleaned_smiles/:/gendock/cleaned_smiles
            - ./gendock_project/uploads/:/gendock/uploads
            - ./gendock_project/uploads/:/gendock/receptor_files
        environment:
            DJANGO_ALLOWED_HOSTS: "localhost 127.0.0.1 [::1]"
            DEBUG: "True"
            CELERY_BROKER_URL: "redis://redis:6379/0"
            CELERY_RESULT_BACKEND: "redis://redis:6379/0"
            DJANGO_DB: postgresql
            POSTGRES_HOST: db
            POSTGRES_NAME: postgres
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
            POSTGRES_PORT: 5432
        depends_on:
            - web
            - redis
    db:
        image: postgres
        restart: unless-stopped
        volumes:
            - postgres_data:/var/lib/postgresql/data/
        environment:
            POSTGRES_DB: postgres
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
        expose:
            - 5432
volumes:
    static_volume: {}
    postgres_data: {}